.PHONY: help dev run-backend run-frontend test build clean docker-build docker-run install-deps install-frontend-deps init migrate lint fmt

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BINARY_NAME=telegram-emulator
BUILD_DIR=build
WEB_DIR=web

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[32m
BLUE=\033[34m
GRAY=\033[90m
RESET=\033[0m
BOLD=\033[1m

# =============================================================================
# –ò–ù–§–û–†–ú–ê–¶–ò–Ø
# =============================================================================

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@printf "$(BOLD)Telegram Emulator - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(RESET)\n\n"
	@awk 'BEGIN { \
		FS = ":.*?## "; \
		category = ""; \
	} \
	/^# =============================================================================/ { \
		getline; \
		if ($$0 ~ /^# [^=]/) { \
			category = substr($$0, 3); \
			printf "\n$(GREEN)%s$(RESET)\n", category; \
		} \
	} \
	/^[a-zA-Z_-]+:.*?## / { \
		if (category != "") { \
			printf "  $(BLUE)%-20s$(RESET) $(GRAY)%s$(RESET)\n", $$1, $$2; \
		} \
	}' $(MAKEFILE_LIST)

# =============================================================================
# –†–ê–ó–†–ê–ë–û–¢–ö–ê
# =============================================================================

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å backend –∏ frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BOLD)üöÄ –ó–∞–ø—É—Å–∫ Telegram Emulator –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	@echo ""
	@echo "$(GREEN)üìã –°—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞:$(RESET)"
	@echo ""
	@echo "$(BLUE)1. Backend —Å–µ—Ä–≤–µ—Ä (Go):$(RESET)"
	@echo "   –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Ä—Ç—É 3001..."
	@echo "   API: http://localhost:3001"
	@echo "   WebSocket: ws://localhost:3001/ws"
	@echo ""
	@echo "$(BLUE)2. Frontend —Å–µ—Ä–≤–µ—Ä (React):$(RESET)"
	@echo "   –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Ä—Ç—É 3000..."
	@echo "   Web UI: http://localhost:3000"
	@echo ""
	@echo "$(GRAY)‚è≥ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ screen —Å–µ—Å—Å–∏—è—Ö...$(RESET)"
	@echo ""
	@echo "$(BOLD)–ó–∞–ø—É—Å–∫ backend –≤ screen —Å–µ—Å—Å–∏–∏ 'telegram-backend'...$(RESET)"
	@screen -dmS telegram-backend bash -c "cd $(CURDIR) && go run cmd/emulator/main.go; exec bash"
	@echo "$(GREEN)‚úÖ Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3001$(RESET)"
	@echo ""
	@echo "$(BOLD)–ó–∞–ø—É—Å–∫ frontend –≤ screen —Å–µ—Å—Å–∏–∏ 'telegram-frontend'...$(RESET)"
	@screen -dmS telegram-frontend bash -c "cd $(WEB_DIR) && npm run dev; exec bash"
	@echo "$(GREEN)‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000$(RESET)"
	@echo ""
	@echo "$(BOLD)üéâ Telegram Emulator –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!$(RESET)"
	@echo "$(GRAY)–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ$(RESET)"
	@echo ""
	@echo "$(GREEN)üì∫ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ screen —Å–µ—Å—Å–∏—è–º–∏:$(RESET)"
	@echo "   screen -r telegram-backend    # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ backend –ª–æ–≥–∞–º"
	@echo "   screen -r telegram-frontend   # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ frontend –ª–æ–≥–∞–º"
	@echo "   screen -ls                    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π"
	@echo ""
	@echo "$(GRAY)–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make stop$(RESET)"
	@echo ""
	@echo "$(BOLD)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(RESET)"
	@sleep 3
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!$(RESET)"

run-backend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend —Å–µ—Ä–≤–µ—Ä
	@echo "üöÄ –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞..."
	go run cmd/emulator/main.go

run-frontend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ frontend (React dev —Å–µ—Ä–≤–µ—Ä)
	@echo "üåê –ó–∞–ø—É—Å–∫ frontend..."
	cd $(WEB_DIR) && npm run dev

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	go test ./...

build: ## –°–æ–±—Ä–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
	@echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	mkdir -p $(BUILD_DIR)
	go build -o $(BUILD_DIR)/$(BINARY_NAME) cmd/emulator/main.go

clean: ## –û—á–∏—Å—Ç–∏—Ç—å build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	rm -rf $(BUILD_DIR)
	go clean

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BOLD)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	@echo ""
	@echo "$(BLUE)–û—Å—Ç–∞–Ω–æ–≤–∫–∞ screen —Å–µ—Å—Å–∏–π...$(RESET)"
	@screen -S telegram-backend -X quit 2>/dev/null || echo "$(GRAY)Backend —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞$(RESET)"
	@echo "$(GREEN)‚úÖ Backend —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(RESET)"
	@screen -S telegram-frontend -X quit 2>/dev/null || echo "$(GRAY)Frontend —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞$(RESET)"
	@echo "$(GREEN)‚úÖ Frontend —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(RESET)"
	@echo ""
	@echo "$(BLUE)–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...$(RESET)"
	@-pkill -f 'go run cmd/emulator/main.go' 2>/dev/null || echo "$(GRAY)Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã$(RESET)"
	@-pkill -f 'npm run dev' 2>/dev/null || echo "$(GRAY)Frontend –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã$(RESET)"
	@-pkill -f 'vite' 2>/dev/null || echo "$(GRAY)Vite –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã$(RESET)"
	@echo "$(GREEN)‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(RESET)"
	@echo ""
	@echo "$(BOLD)üéâ Telegram Emulator –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!$(RESET)"

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BOLD)üì∫ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ backend –ª–æ–≥–∞–º...$(RESET)"
	@echo "$(GRAY)–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ screen –Ω–∞–∂–º–∏—Ç–µ Ctrl+A, –∑–∞—Ç–µ–º D$(RESET)"
	@screen -r telegram-backend

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ frontend —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BOLD)üì∫ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ frontend –ª–æ–≥–∞–º...$(RESET)"
	@echo "$(GRAY)–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ screen –Ω–∞–∂–º–∏—Ç–µ Ctrl+A, –∑–∞—Ç–µ–º D$(RESET)"
	@screen -r telegram-frontend

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö screen —Å–µ—Å—Å–∏–π
	@echo "$(BOLD)üì∫ –ê–∫—Ç–∏–≤–Ω—ã–µ screen —Å–µ—Å—Å–∏–∏:$(RESET)"
	@screen -ls

# =============================================================================
# DOCKER
# =============================================================================

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker build -t $(BINARY_NAME) .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	docker run -p 3001:3001 $(BINARY_NAME)

# =============================================================================
# –£–°–¢–ê–ù–û–í–ö–ê –ò –ù–ê–°–¢–†–û–ô–ö–ê
# =============================================================================

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Go –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	go mod download
	go mod tidy

install-frontend-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (npm)
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	cd $(WEB_DIR) && npm install

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
init: install-deps install-frontend-deps ## –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
	@echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!"

# =============================================================================
# –ë–ê–ó–ê –î–ê–ù–ù–´–•
# =============================================================================

migrate: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
	go run cmd/emulator/main.go migrate

# =============================================================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –ö–ê–ß–ï–°–¢–í–û –ö–û–î–ê
# =============================================================================

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	golangci-lint run

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
fmt: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	go fmt ./...
	go vet ./...
