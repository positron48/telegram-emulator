name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install Go dependencies
      run: |
        cd budget
        go mod download
        go mod verify
        
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci
        
    - name: Run all tests
      run: |
        # Go tests
        cd budget
        go test ./... -race -coverprofile=coverage.out -covermode=atomic
        
        # Frontend tests
        cd ../web
        npm run lint
        npm test --if-present
        
    - name: Build Go binary
      run: |
        cd budget
        go build -o bin/budgetd ./cmd/budgetd
        
    - name: Build frontend
      run: |
        cd web
        npm run build
        
    - name: Build Docker images
      run: |
        docker build -t telegram-emulator:staging .
        
    - name: Deploy to staging
      run: |
        echo "Deploy to staging server"
        # Здесь можно добавить команды для деплоя
        # Например, rsync, scp, или интеграцию с сервисами деплоя
        # docker push your-registry/telegram-emulator:staging
