import React, { useState } from 'react';
import { parseTelegramText } from '../utils/textParser.jsx';

const QuickStylingTest = ({ onClose }) => {
  const [testText, setTestText] = useState('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ *–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç* –∏ _–∫—É—Ä—Å–∏–≤_. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start');

  const quickExamples = [
    "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ *–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç*",
    "–≠—Ç–æ _–∫—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç_",
    "–≠—Ç–æ ~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç~",
    "–≠—Ç–æ `–∫–æ–¥` –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏",
    "–≠—Ç–æ [—Å—Å—ã–ª–∫–∞ –Ω–∞ Google](https://google.com)",
    "–ö–æ–º–∞–Ω–¥—ã: /start /help /stop",
    "*–ñ–∏—Ä–Ω—ã–π* —Å _–∫—É—Ä—Å–∏–≤–æ–º_ –∏ `–∫–æ–¥–æ–º`"
  ];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">
              üé® –¢–µ—Å—Ç —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
            </h2>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
            >
              ‚úï
            </button>
          </div>

          <div className="space-y-4">
            {/* –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–∏–º–µ—Ä—ã */}
            <div>
              <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-3">
                –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–∏–º–µ—Ä—ã:
              </h3>
              <div className="flex flex-wrap gap-2">
                {quickExamples.map((example, index) => (
                  <button
                    key={index}
                    onClick={() => setTestText(example)}
                    className="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors"
                  >
                    {example.substring(0, 20)}...
                  </button>
                ))}
              </div>
            </div>

            {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
              </label>
              <textarea
                value={testText}
                onChange={(e) => setTestText(e.target.value)}
                className="w-full h-24 p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: *–∂–∏—Ä–Ω—ã–π*, _–∫—É—Ä—Å–∏–≤_, ~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π~, `–∫–æ–¥`, [—Å—Å—ã–ª–∫–∞](https://example.com)"
              />
            </div>

            {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                –†–µ–∑—É–ª—å—Ç–∞—Ç:
              </label>
              <div className="p-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 min-h-24">
                <div className="whitespace-pre-wrap break-words text-gray-900 dark:text-white">
                  {parseTelegramText(testText)}
                </div>
              </div>
            </div>

            {/* –°–ø—Ä–∞–≤–∫–∞ */}
            <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4">
              <h4 className="text-sm font-medium text-blue-900 dark:text-blue-100 mb-2">
                üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
              </h4>
                             <div className="grid grid-cols-2 gap-2 text-xs text-blue-800 dark:text-blue-200">
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">*—Ç–µ–∫—Å—Ç*</code> - –∂–∏—Ä–Ω—ã–π</div>
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">_—Ç–µ–∫—Å—Ç_</code> - –∫—É—Ä—Å–∏–≤</div>
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">~—Ç–µ–∫—Å—Ç~</code> - –∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π</div>
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">`–∫–æ–¥`</code> - –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π</div>
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">[—Ç–µ–∫—Å—Ç](—Å—Å—ã–ª–∫–∞)</code> - —Å—Å—ã–ª–∫–∞</div>
                 <div>‚Ä¢ <code className="bg-blue-100 dark:bg-blue-800 text-blue-900 dark:text-blue-100 px-1 rounded">/–∫–æ–º–∞–Ω–¥–∞</code> - –∫–æ–º–∞–Ω–¥–∞</div>
               </div>
            </div>
          </div>

          <div className="mt-6 flex justify-end">
            <button
              onClick={onClose}
              className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors"
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default QuickStylingTest;
