import { parseTelegramText } from './textParser.jsx';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
const testMessage = `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã*

\`/stats [–ø–µ—Ä–∏–æ–¥]\` - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–µ—Ä–∏–æ–¥

*–í–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–∏–æ–¥–∞:*
‚Ä¢ /stats - –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
‚Ä¢ \`/stats 2023-12\` - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ—Å—è—Ü (YYYY-MM)
‚Ä¢ \`/stats week\` - –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è

\`/top_categories [–ø–µ—Ä–∏–æ–¥] [–ª–∏–º–∏—Ç]\` - –¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏

*–ü—Ä–∏–º–µ—Ä—ã:*
‚Ä¢ /top_categories - –¢–æ–ø-5 –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
‚Ä¢ \`/top_categories 2023-12\` - –¢–æ–ø-5 –∑–∞ –¥–µ–∫–∞–±—Ä—å 2023
‚Ä¢ \`/top_categories week 10\` - –¢–æ–ø-10 –∑–∞ –Ω–µ–¥–µ–ª—é

\`/recent [–ª–∏–º–∏—Ç]\` - –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏

*–ü—Ä–∏–º–µ—Ä—ã:*
‚Ä¢ /recent - –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
‚Ä¢ \`/recent 20\` - –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π

\`/export [–ø–µ—Ä–∏–æ–¥] [–ª–∏–º–∏—Ç]\` - –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ CSV —Ñ–æ—Ä–º–∞—Ç

*–ü—Ä–∏–º–µ—Ä—ã:*
‚Ä¢ /export - –≠–∫—Å–ø–æ—Ä—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
‚Ä¢ \`/export 2023-12\` - –≠–∫—Å–ø–æ—Ä—Ç –∑–∞ –¥–µ–∫–∞–±—Ä—å 2023
‚Ä¢ \`/export week 100\` - –≠–∫—Å–ø–æ—Ä—Ç 100 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ React —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const extractTextFromReactElements = (elements) => {
  if (!elements) return "";
  if (typeof elements === 'string') return elements;
  if (Array.isArray(elements)) {
    return elements.map(extractTextFromReactElements).join('');
  }
  if (elements.props && elements.props.children) {
    return extractTextFromReactElements(elements.props.children);
  }
  return "";
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const hasElement = (elements, tagName, className = null) => {
  if (!elements) return false;
  if (Array.isArray(elements)) {
    return elements.some(el => hasElement(el, tagName, className));
  }
  if (elements.type === tagName) {
    if (className) {
      return elements.props && elements.props.className && elements.props.className.includes(className);
    }
    return true;
  }
  if (elements.props && elements.props.children) {
    return hasElement(elements.props.children, tagName, className);
  }
  return false;
};

console.log("üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞...\n");

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
console.log("üìù –¢–µ—Å—Ç 1: –ó–∞–≥–æ–ª–æ–≤–æ–∫");
const headerTest = parseTelegramText("üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã*");
const headerText = extractTextFromReactElements(headerTest);
const hasBold = hasElement(headerTest, 'strong');
console.log(`  ${hasBold ? '‚úÖ' : '‚ùå'} –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∂–∏—Ä–Ω—ã–π: ${hasBold ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${headerText}"`);

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–¥–µ
console.log("\nüìù –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥—ã –≤ –∫–æ–¥–µ");
const codeTest = parseTelegramText("`/stats [–ø–µ—Ä–∏–æ–¥]` - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞");
const hasCode = hasElement(codeTest, 'code');
const codeText = extractTextFromReactElements(codeTest);
console.log(`  ${hasCode ? '‚úÖ' : '‚ùå'} –ö–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: ${hasCode ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${codeText}"`);

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
console.log("\nüìù –¢–µ—Å—Ç 3: –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç");
const boldTest = parseTelegramText("*–í–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–∏–æ–¥–∞:*");
const hasBold2 = hasElement(boldTest, 'strong');
const boldText = extractTextFromReactElements(boldTest);
console.log(`  ${hasBold2 ? '‚úÖ' : '‚ùå'} –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç: ${hasBold2 ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${boldText}"`);

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ —Å–ø–∏—Å–∫–µ
console.log("\nüìù –¢–µ—Å—Ç 4: –ö–æ–º–∞–Ω–¥—ã –≤ —Å–ø–∏—Å–∫–µ");
const commandTest = parseTelegramText("‚Ä¢ /stats - –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü");
const commandText = extractTextFromReactElements(commandTest);
console.log(`  –¢–µ–∫—Å—Ç: "${commandText}"`);

// –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–¥–µ –≤ —Å–ø–∏—Å–∫–µ
console.log("\nüìù –¢–µ—Å—Ç 5: –ö–æ–º–∞–Ω–¥—ã –≤ –∫–æ–¥–µ –≤ —Å–ø–∏—Å–∫–µ");
const codeCommandTest = parseTelegramText("‚Ä¢ `/stats 2023-12` - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ—Å—è—Ü (YYYY-MM)");
const hasCode2 = hasElement(codeCommandTest, 'code');
const codeCommandText = extractTextFromReactElements(codeCommandTest);
console.log(`  ${hasCode2 ? '‚úÖ' : '‚ùå'} –ö–æ–¥ –≤ —Å–ø–∏—Å–∫–µ: ${hasCode2 ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${codeCommandText}"`);

// –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º
console.log("\nüìù –¢–µ—Å—Ç 6: –ö–æ–º–∞–Ω–¥—ã —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º");
const underscoreTest = parseTelegramText("‚Ä¢ /top_categories - –¢–æ–ø-5 –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü");
const underscoreText = extractTextFromReactElements(underscoreTest);
console.log(`  –¢–µ–∫—Å—Ç: "${underscoreText}"`);

// –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ –∫–æ–¥–µ
console.log("\nüìù –¢–µ—Å—Ç 7: –ö–æ–º–∞–Ω–¥—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ –∫–æ–¥–µ");
const paramTest = parseTelegramText("‚Ä¢ `/top_categories 2023-12` - –¢–æ–ø-5 –∑–∞ –¥–µ–∫–∞–±—Ä—å 2023");
const hasCode3 = hasElement(paramTest, 'code');
const paramText = extractTextFromReactElements(paramTest);
console.log(`  ${hasCode3 ? '‚úÖ' : '‚ùå'} –ö–æ–¥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: ${hasCode3 ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${paramText}"`);

// –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ –∫–æ–¥–µ
console.log("\nüìù –¢–µ—Å—Ç 8: –ö–æ–º–∞–Ω–¥—ã —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ –∫–æ–¥–µ");
const spaceTest = parseTelegramText("‚Ä¢ `/top categories week 10` - –¢–æ–ø-10 –∑–∞ –Ω–µ–¥–µ–ª—é");
const hasCode4 = hasElement(spaceTest, 'code');
const spaceText = extractTextFromReactElements(spaceTest);
console.log(`  ${hasCode4 ? '‚úÖ' : '‚ùå'} –ö–æ–¥ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏: ${hasCode4 ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${spaceText}"`);

// –¢–µ—Å—Ç 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—Å–∏–≤–∞
console.log("\nüìù –¢–µ—Å—Ç 9: –ö—É—Ä—Å–∏–≤");
const italicTest = parseTelegramText("_–∫—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç_");
const hasItalic = hasElement(italicTest, 'em');
const italicText = extractTextFromReactElements(italicTest);
console.log(`  ${hasItalic ? '‚úÖ' : '‚ùå'} –ö—É—Ä—Å–∏–≤: ${hasItalic ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${italicText}"`);

// –¢–µ—Å—Ç 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—á–µ—Ä–∫–Ω—É—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
console.log("\nüìù –¢–µ—Å—Ç 10: –ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç");
const strikeTest = parseTelegramText("~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç~");
const hasStrike = hasElement(strikeTest, 'span');
const strikeText = extractTextFromReactElements(strikeTest);
console.log(`  ${hasStrike ? '‚úÖ' : '‚ùå'} –ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π: ${hasStrike ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${strikeText}"`);

// –¢–µ—Å—Ç 11: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫
console.log("\nüìù –¢–µ—Å—Ç 11: –°—Å—ã–ª–∫–∏");
const linkTest = parseTelegramText("[Google](https://google.com)");
const hasLink = hasElement(linkTest, 'a');
const linkText = extractTextFromReactElements(linkTest);
console.log(`  ${hasLink ? '‚úÖ' : '‚ùå'} –°—Å—ã–ª–∫–∞: ${hasLink ? 'PASS' : 'FAIL'}`);
console.log(`  –¢–µ–∫—Å—Ç: "${linkText}"`);

console.log("\n‚ú® –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!");

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
  window.runParserTests = () => {
    console.log("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ...");
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
  };
}
